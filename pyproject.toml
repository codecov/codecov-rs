[build-system]
requires = ["maturin>=1.3,<2.0"]
build-backend = "maturin"

[project]
name = "codecov_rs"
authors = [{ name = "Codecov", email = "support@codecov.io" }]
readme = "README.md"
requires-python = ">=3.12"
license = { file = "LICENSE.md" }
classifiers = [
    "Programming Language :: Rust",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = []
dynamic = ["version"]

[tool.maturin]
module-name = "codecov_rs._bindings"
manifest-path = "bindings/Cargo.toml"
python-source = "python"


[tool.mypy]
python_version = "3.12"
plugins = ["pydantic.mypy"]

# Don't bother scanning Rust directories
files = ["python/"]

[tool.ruff]
# Don't bother scanning Rust directories
include = ["pyproject.toml", "python/**/*.py", "python/**/*.pyi"]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.12
target-version = "py312"

[tool.ruff.lint]
# Currently only enabled for F (Pyflakes), I (isort), E,W (pycodestyle:Error/Warning), PLC/PLE (Pylint:Convention/Error) 
# and PERF (Perflint) rules: https://docs.astral.sh/ruff/rules/
select = ["F", "I", "E", "W", "PLC", "PLE", "PERF"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.pytest.ini_options]
testpaths = ["python/tests"]
