name: codecov-rs CI

on:
  push:
    branches:
      - main
  pull_request:


concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint (rustfmt + clippy)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: nightly
          components: clippy, rustfmt
      - name: Run lint
        run: |
          cargo fmt --all --check
          cargo clippy

  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: nightly
      - name: Run build
        run: |
          cargo build
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly
        with:
          toolchain: nightly
      - name: Run tests
        run: |
          cargo test
      - name: Install `cargo llvm-cov`
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Collect coverage
        run: |
          cargo llvm-cov --lcov --output-path lcov.info
      - name: Upload to Codecov
        uses: codecov/codecov-action@v4-beta
        with:
          token: ${{ secrets.CODECOV_ORG_TOKEN }}
      - name: Generate JUnit test results
        # Run tests again but with JSON output. Convert to junit then upload.
        # The original format is nicer to look at in CI error messages.
        run: |
          cargo install cargo2junit
          cargo test -- -Z unstable-options --format json --report-time | cargo2junit > results.xml
      - name: Upload test results
        uses: codecov/test-results-action@v1
        with:
          file: ./results.xml
          token: ${{ secrets.CODECOV_ORG_TOKEN }}
          verbose: true
